export class WebSocketClient {
  private ws: WebSocket | null = null;
  private reconnectInterval: number = 5000;
  private url: string;

  constructor() {
    // Use the WebSocket URL from your API Gateway deployment
    this.url = process.env.NEXT_PUBLIC_AWS_WEBSOCKET_URL!;
    this.connect();
  }

  private connect() {
    this.ws = new WebSocket(this.url);

    this.ws.onopen = () => {
      console.log('Connected to AWS WebSocket');
    };

    this.ws.onmessage = (event) => {
      try {
        const data = JSON.parse(event.data);
        // Handle incoming messages
        console.log('Received:', data);
      } catch (error) {
        console.error('Error parsing message:', error);
      }
    };

    this.ws.onclose = () => {
      console.log('Disconnected from AWS WebSocket. Reconnecting...');
      setTimeout(() => this.connect(), this.reconnectInterval);
    };
  }

  public send(message: any) {
    if (this.ws?.readyState === WebSocket.OPEN) {
      this.ws.send(JSON.stringify({
        action: 'message', // Required for API Gateway routing
        data: message
      }));
    }
  }
} 